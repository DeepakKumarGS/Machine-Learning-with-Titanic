setwd("~/Downloads/R/Titanic")
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
library(dplyr)
library(ggplot2)
library(corrplot)
library(rpart)
library(randomForest)
library(pscl)
library(Deducer)
train=read.csv("train.csv",header=TRUE,stringsAsFactors = FALSE)
test=read.csv("test.csv",header=TRUE,stringsAsFactors = FALSE)
summary(train)
glimpse(train)
summary(test)
cat("There are ",nrow(train),"rows and",ncol(train),"columns in train dataset")
cat("There are",nrow(test),"rows and",ncol(train),"columns in test dataset")
install.packages("Amelia")
?Amelia
library(Amelia)
?Amelia
missmap(train,main="Titanic Train Data-Missing Value Visualisation",col=c("red","green"),legend=FALSE)
missmap(train,main="Titanic Train Data-Missing Value Visualisation",col=c("red","green"),legend=FALSE)
missmap(train,main="Titanic Train Data-Missing Value Visualisation",col=c("red","green"),legend=FALSE)
missmap(train,main="Titanic Train Data-Missing Value Visualisation",col=c("red","green"),legend=FALSE)
missmap(test,main="Titanic Test Data-Missing Value Visualisation",col=c("red","green"),legend=FALSE)
library(forcats)
titanic=full_join(train,test)
summary(titanic)
table(is.na(titanic$Age))
prop.table(table(is.na(titanic$Age)))
age=rpart(Age ~Pclass+Sex+SibSp+Parch+Fare+Embarked+Title+Cabin+Embarked,data=titanic[!is.na(titanic$Age),],method="anova")
age=rpart(Age ~Pclass+Sex+SibSp+Parch+Fare+Embarked+Cabin+Embarked,data=titanic[!is.na(titanic$Age),],method="anova")
library(rpart.plot)
rpart.plot(age)
titanic$Age[is.na(titanic$Age)]=predict(age,titanic$Age[is.na(titanic$Age)],)
titanic$Age[is.na(titanic$Age)]=predict(age,titanic$Age[is.na(titanic$Age),])
age=rpart(Age ~Pclass+Sex+SibSp+Parch+Fare+Embarked+Cabin+Embarked,data=titanic[!(is.na(titanic$Age)),],method="anova")
titanic$Age[is.na(titanic$Age)]=predict(age,titanic$Age[is.na(titanic$Age),])
titanic$Age[is.na(titanic$Age)]=predict(age,titanic[is.na(titanic$Age),])
age=rpart(Age ~Pclass+Sex+SibSp+Parch+Fare+Embarked,data=titanic[!(is.na(titanic$Age)),],method="anova")
titanic$Age[is.na(titanic$Age)]=predict(age,titanic[is.na(titanic$Age),])
prop.table(table(is.na(titanic$Age)))
View(titanic)
prop.table(table(is.na(titanic$Age)))
ggplot(titanic,aes(Age))+geom_histogram()+labs(x="Age",y="Count",title="Distribution of Age after imputation")
ggplot(titanic,aes(Age))+geom_histogram(aes(y=(..count..)))+labs(x="Age",y="Count",title="Distribution of Age after imputation")
ggplot(titanic,aes(Age,color="green"))+geom_histogram(aes(y=(..count..)))+labs(x="Age",y="Count",title="Distribution of Age after imputation")
ggplot(titanic,aes(Age,fill="green"))+geom_histogram(aes(y=(..count..)))+labs(x="Age",y="Count",title="Distribution of Age after imputation")
ggplot(titanic,aes(Age,fill="green"))+geom_histogram(aes(y=(..count..)))+labs(x="Age",y="Count",title="Distribution of Age after imputation")+theme(legend.position="none")
ggplot(titanic,aes(Age,fill="green"))+geom_histogram(aes(y=(..count..)),bins=40)+labs(x="Age",y="Count",title="Distribution of Age after imputation")+theme(legend.position="none")
ggplot(titanic,aes(Age,fill="green"))+geom_histogram(aes(y=(..count..)),bins=10)+labs(x="Age",y="Count",title="Distribution of Age after imputation")+theme(legend.position="none")
ggplot(titanic,aes(Age,fill="green"))+geom_histogram(aes(y=(..count..)),bins=10)+geom_density(alpha=0.4)+labs(x="Age",y="Count",title="Distribution of Age after imputation")+theme(legend.position="none")
ggplot(titanic,aes(Age,fill="green"))+geom_density(alpha=0.4)+labs(x="Age",y="Count",title="Distribution of Age after imputation")+theme(legend.position="none")
cat("There is",length(is.na(titanic$Fare)),"missing value in Fare")
cat("There is",count(is.na(titanic$Fare)),"missing value in Fare")
cat("There is",sum(is.na(titanic$Fare)),"missing value in Fare")
which(is.na(titanic$Fare))
titanic[1044,]
titanic[1044,]
fare=rpart(Fare ~Parch+SibSp+Sex+Pclass,data=titanic[!(is.na(titanic$Fare))],method="anova")
fare=rpart(Fare ~Parch+SibSp+Sex+Pclass,data=titanic[!(is.na(titanic$Fare)),],method="anova")
titanic$Fare[(is.na(titanic$Fare))]=predict(fare,data=titanic$Fare[is.na(titanic$Fare),])
titanic$Fare[(is.na(titanic$Fare))]=predict(fare,data=titanic[is.na(titanic$Fare),])
rpart.plot(fare,branch=0,branch.type=2,type=1,extra=102,shadow.col="pink",box.col="gray",split.col="magenta",main="Decision Tree for Imputation")
rpart.plot(fare,branch=0,branch.type=2,type=1,shadow.col="pink",box.col="gray",split.col="magenta",main="Decision Tree for Imputation")
rpart.plot(fare,branch=0,branch.type=2,shadow.col="pink",box.col="gray",split.col="magenta",main="Decision Tree for Imputation")
rpart.plot(fare,shadow.col="pink",box.col="gray",split.col="magenta",main="Decision Tree for Imputation")
rpart.plot(fare,shadow.col="pink",box.col="gray",split.col="magenta",main="Decision Tree for Imputation")
prop.table(table(is.na(titanic$Fare)))
ggplot(titanic,aes(Fare,fill="green"))+geom_density(alpha=0.4)+labs(x="Fare",y="Count",title="Distribution of Fare after imputation")+theme(legend.position="none")
ggplot(titanic,aes(Fare,fill="green"))+geom_density(alpha=0.4)+labs(x="Fare",y="Fare Density",title="Distribution of Fare after imputation")+theme(legend.position="none")
str(titanic$Name)
titanic$Title=gsub('(.*, )|(\\.*)','',titanic$Name)
head(titanic$Title)
titanic$Title=gsub('(.*, )|(\\..*)','',titanic$Name)
head(titanic$Title)
titanic %>% group_by(title) %>% tally()
titanic %>% group_by(Title) %>% tally()
titanic %>% group_by(Title) %>% tally() %.% arrange(desc(n))
titanic %>% group_by(Title) %>% tally() %>% arrange(desc(n))
table(titanic$Title,titanic$Sex)
table(titanic$Title,titanic$Sex)
titanic <- titanic %>% mutate(Title = factor(Title)) %>% mutate(Title = fct_collapse(Title, "Miss" = c("Mlle", "Ms"), "Mrs" = "Mme", "Ranked" = c( "Major", "Dr", "Capt", "Col", "Rev"),"Royalty" = c("Lady", "Dona", "the Countess", "Don", "Sir", "Jonkheer")))
str(titanic$Title)
titanic$Families=factor(ifelse(SibSp+Parch+1>1,"Yes","No"))
titanic$Families=factor(ifelse(SibSp+Parch+1>1,"Yes","No"))
titanic$Families= factor(ifelse(titanic$SibSp + titanic$Parch + 1> 1,"Yes","No"))
table(titanic$Families)
prop.table(table(titanic$Families))
table(titanic$Pclass)
prop.table(table(titanic$Pclass))
